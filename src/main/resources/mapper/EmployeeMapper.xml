<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zdx.ssm.dao.EmployeeMapper">
	<resultMap id="BaseResultMap" type="com.zdx.ssm.bean.Employee">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="last_name" jdbcType="VARCHAR" property="lastName" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="gender" jdbcType="CHAR" property="gender" />
		<result column="department_id" jdbcType="INTEGER" property="departmentId" />
	</resultMap>
	<!-- 自定义带部门查询结果 -->
	<resultMap id="WithDepartmentResultMap" type="com.zdx.ssm.bean.Employee">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="last_name" jdbcType="VARCHAR" property="lastName" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="gender" jdbcType="CHAR" property="gender" />
		<result column="department_id" jdbcType="INTEGER" property="departmentId" />
		<!-- 指定联合查询出的部门字段的封装 -->
		<association property="department" javaType="com.zdx.ssm.bean.Department">
			<id column="id" property="id" />
			<result column="dept_name" property="deptName" />
		</association>
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="WithDepartment_Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, last_name, email, gender, department_id
	</sql>
	<sql id="WithDepartment_Column_List">
		e.id, e.last_name, e.email, e.gender, e.department_id, d.id, d.dept_name
	</sql>
	<select id="selectByExample" parameterType="com.zdx.ssm.bean.EmployeeExample" resultMap="WithDepartmentResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from tbl_employee
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tbl_employee
        where id = #{id,jdbcType=INTEGER}
    </select>
	<!-- 查询员工同时带部门信息 -->
	<select id="selectWithDepartmentByExample" resultMap="WithDepartmentResultMap">
		SELECT
		<if test="distinct">
			DISTINCT
		</if>
		<include refid="WithDepartment_Column_List" />
		FROM tbl_employee e LEFT JOIN tbl_department d ON e.department_id = d.id
		<if test="_parameter != null">
			<include refid="WithDepartment_Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			ORDER BY ${orderByClause}
		</if>
	</select>
	<!-- 根据ID查询员工带部门信息 -->
	<select id="selectWithDepartmentById" parameterType="java.lang.Integer" resultMap="WithDepartmentResultMap">
        SELECT
        <include refid="WithDepartment_Column_List" />
        FROM tbl_employee e LEFT JOIN tbl_department d ON e.department_id = d.id
        WHERE e.id = #{id,jdbcType=INTEGER}
    </select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from tbl_employee
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.zdx.ssm.bean.EmployeeExample">
		delete from tbl_employee
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.zdx.ssm.bean.Employee">
		insert into tbl_employee (id, last_name, email,
		gender, department_id)
		values (#{id,jdbcType=INTEGER}, #{lastName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
		#{gender,jdbcType=CHAR}, #{departmentId,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.zdx.ssm.bean.Employee">
		insert into tbl_employee
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="lastName != null">
				last_name,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="gender != null">
				gender,
			</if>
			<if test="departmentId != null">
				department_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="lastName != null">
				#{lastName,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				#{gender,jdbcType=CHAR},
			</if>
			<if test="departmentId != null">
				#{departmentId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.zdx.ssm.bean.EmployeeExample" resultType="java.lang.Long">
		select count(*) from tbl_employee
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update tbl_employee
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.lastName != null">
				last_name = #{record.lastName,jdbcType=VARCHAR},
			</if>
			<if test="record.email != null">
				email = #{record.email,jdbcType=VARCHAR},
			</if>
			<if test="record.gender != null">
				gender = #{record.gender,jdbcType=CHAR},
			</if>
			<if test="record.departmentId != null">
				department_id = #{record.departmentId,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update tbl_employee
		set id = #{record.id,jdbcType=INTEGER},
		last_name = #{record.lastName,jdbcType=VARCHAR},
		email = #{record.email,jdbcType=VARCHAR},
		gender = #{record.gender,jdbcType=CHAR},
		department_id = #{record.departmentId,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.zdx.ssm.bean.Employee">
		update tbl_employee
		<set>
			<if test="lastName != null">
				last_name = #{lastName,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				gender = #{gender,jdbcType=CHAR},
			</if>
			<if test="departmentId != null">
				department_id = #{departmentId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.zdx.ssm.bean.Employee">
		update tbl_employee
		set last_name = #{lastName,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		gender = #{gender,jdbcType=CHAR},
		department_id = #{departmentId,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>